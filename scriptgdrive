const sheetName = 'Sheet1'
const scriptProp = PropertiesService.getScriptProperties()

function intialSetup() {
  const activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet()
  scriptProp.setProperty('key', activeSpreadsheet.getId())
  // ID_FOLDER  ganti dengan id folder tujuan
  scriptProp.setProperty('folder', '1w5GQppMKRkoZRdz0c3EZJgr7O22tpbGL')
  Logger.log("Init success!")
}

function doPost(e) {
  var lock = LockService.getScriptLock()
  lock.tryLock(10000)
  try {
    const ss = SpreadsheetApp.openById(scriptProp.getProperty('key'))
    const files = JSON.parse(e.parameter.files)
    const keterangan = e.parameter.keterangan
    for (const file of files) {
      var base64 = file.data.replace(/^data.*;base64,/gim, "")
      var mimetype = file.data.match(/(?<=data:).*?(?=;)/gim)?.[0]
      var decode = Utilities.base64Decode(base64, Utilities.Charset.UTF_8)
      
      const name = file.name.split(".")
      const fileName = name[0]  +"-" + Date.now()
      const fileFormat = name.length == 2 ? name[1] : mimetype.split("/")[1]
      var blob = Utilities.newBlob(decode, mimetype, fileName + "." + fileFormat )

      // var blob = Utilities.newBlob(decode, mimetype, Date.now() + "-" + file.name)
      var fileOut = DriveApp.getFolderById(scriptProp.getProperty('folder')).createFile(blob)
      const sheet = ss.getSheetByName(sheetName)
      sheet.appendRow([new Date(), keterangan, fileOut.getName(), fileOut.getUrl()])
    }
    return ContentService.createTextOutput(JSON.stringify({ ok: true })).setMimeType(ContentService.MimeType.JSON)
  } catch (err) {
    return ContentService.createTextOutput(JSON.stringify({ ok: false, err: err.stack })).setMimeType(ContentService.MimeType.JSON)
  } finally {
    lock.releaseLock()
  }
}